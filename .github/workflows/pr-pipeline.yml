name: CI/CD Pipeline

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore
      
    - name: Test
      run: dotnet test --no-build --verbosity normal

    # Publish to NuGet only on successful push to main
    - name: Build Release for NuGet
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: dotnet build DDSUnsplitter.Library --configuration Release --no-restore

    - name: Pack NuGet Package
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: dotnet pack DDSUnsplitter.Library --configuration Release --no-build --output nupkg

    - name: Publish to NuGet
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      shell: pwsh
      run: |
        Get-ChildItem -Recurse -Path "./**/*.nupkg" | ForEach-Object {
          Write-Host "Publishing package: $($_.Name)"
          dotnet nuget push $_.FullName --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
        }
        Get-ChildItem -Recurse -Path "./**/*.snupkg" | ForEach-Object {
          Write-Host "Publishing symbols: $($_.Name)"
          dotnet nuget push $_.FullName --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
        }
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}